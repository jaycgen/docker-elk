input {
    file {
        path => "/var/import/*.log"
        start_position => beginning
   		sincedb_path => "/dev/null"
   		codec => multiline {
	        pattern => '^.*<\?xml.*?\?>'
	        negate => true
	        what => "previous"
    	}
	}
}
filter {
	mutate {
    	gsub => ["message", "\n", ""]
	}
	mutate {
		gsub => ["message", "\r", ""]
		}
	mutate {
  		strip => "message"
	}
	mutate {
    	gsub => ['message', ".*<\?xml version", "<?xml version"]
	}
	mutate {
    	gsub => ['message', "</log:logMessage>.*", "</log:logMessage></log:loggerMessage>"]
	}
	xml {
        store_xml => "false"
        source => "message"
        target => "osb-logs"
        remove_namespaces => "true"
        xpath => [
			"/loggerMessage/logMessage/GUID/text()","GUID",
			"/loggerMessage/logMessage/serviceName/text()","serviceName",
			"/loggerMessage/logMessage/instanceID/text()","instanceID",
			"/loggerMessage/logMessage/logSummary/text()","logSummary",
			"/loggerMessage/logMessage/payload/TargetSystem/text()","TargetSystem",
			"/loggerMessage/logMessage/*/Operation/text()","Operation",
			"/loggerMessage/logMessage/*/AccountID/text()","AccountID",
			"/loggerMessage/logMessage/isError/text()","isError",
			"/loggerMessage/logMessage/errorCode/text()","errorCode",
			"/loggerMessage/logMessage/timeStamp/text()","timeStamp"
		]
    }
}
output {
   elasticsearch {
	  hosts => "elasticsearch:9200"
	}
}